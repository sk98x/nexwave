1. TRIGGERS


 create or replace trigger dept before insert on dept
  2  BEGIN
  3  IF (TO_CHAR(SYSDATE,'DY') IN ('SAT','SUN')) OR (TO_CHAR(SYSDATE,'HH24:MI')
  4  NOT BETWEEN '08:00' AND '18:00') THEN
  5  RAISE_APPLICATION_ERROR(-20500,'YOU MAY INSERT INTO DEPARTMENT TABLE ONLY DURING NORMAL BUISNESS HOURS');
  6  END IF;
  7  END;
  8  /

Trigger created.

SQL> SELECT * FROM DEPT;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON

SQL> INSERT INTO DEPT VALUES(60,'CONS','BANGALORE');
INSERT INTO DEPT VALUES(60,'CONS','BANGALORE')
            *
ERROR at line 1:
ORA-20500: YOU MAY INSERT INTO DEPARTMENT TABLE ONLY DURING NORMAL BUISNESS HOURS
ORA-06512: at "SCOTT.DEPT", line 4
ORA-04088: error during execution of trigger 'SCOTT.DEPT'



2.



SQL> CREATE TABLE AUD(UNAME VARCHAR2(30),ID NUMBER(6),OLDLNAME VARCHAR2(25),NEWLNAME VARCHAR2(25),OLDTITLE VARCHAR2(25),NEWTITLE VARCHAR2(25),OLDSAL NUMBER(8,2),NEWSAL NUMBER(8,2));

Table created.

SQL> DESC AUD
 Name                                                              Null?    Type
 ----------------------------------------------------------------- -------- --------------------------------------------
 UNAME                                                                      VARCHAR2(30)
 ID                                                                         NUMBER(6)
 OLDLNAME                                                                   VARCHAR2(25)
 NEWLNAME                                                                   VARCHAR2(25)
 OLDTITLE                                                                   VARCHAR2(25)
 NEWTITLE                                                                   VARCHAR2(25)
 OLDSAL                                                                     NUMBER(8,2)
 NEWSAL




SQL> CREATE OR REPLACE TRIGGER AUDVAL AFTER DELETE OR INSERT OR UPDATE ON EMP FOR EACH ROW
  2  BEGIN
  3  INSERT INTO AUD VALUES(USER,:OLD.EMPNO,:OLD.ENAME,:NEW.ENAME,:OLD.JOB,:NEW.JOB,:OLD.SAL,:NEW.SAL,SYSDATE);
  4  END;
  5  /

Trigger created.

SQL> UPDATE EMP SET ENAME='JJJJ' WHERE ENAME='SCOTT';

1 row updated.


3.


SQL> DECLARE
  2  CURSOR C1 IS SELECT * FROM DEPT;
  3  CURSOR C2 (PD NUMBER) IS SELECT * FROM EMP WHERE DEPTNO=PD;
  4  BEGIN
  5  FOR VDEP IN C1
  6  LOOP
  7  DBMS_OUTPUT.PUT_LINE(VDEP.DEPTNO||' '||VDEP.DNAME);
  8  FOR EREC IN C2(VDEP.DEPTNO)
  9  LOOP
 10  DBMS_OUTPUT.PUT_LINE(EREC.EMPNO||' '||EREC.ENAME);
 11  END LOOP;
 12  END LOOP;
 13  END;
 14  /

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> /
10 ACCOUNTING
7782 CLARK
7839 KING
7934 MILLER

20 RESEARCH
7369 SMITH
7566 JONES
7788 JJJJ
7876 ADAMS
7902 FORD

30 SALES
7499 ALLEN
7521 WARD
7654 MARTIN
7698 BLAKE
7844 TURNER
7900 JAMES

40 OPERATIONS

PL/SQL procedure successfully completed.



5.

CREATE OR REPLACE TRIGGER LOGINGIN AFTER LOGON ON SCHEMA
BEGIN INSERT INTO LOGDET VALUES(USER,SYSDATE,'LOGGING ON');
END;
CREATE OR REPLACE TRIGGER LOGINGOUT BEFORE LOGOFF ON SCHEMA
BEGIN INSERT INTO LOGDET VALUES(USER,SYSDATE,'LOGGING OFF');
END;
